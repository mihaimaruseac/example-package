on:
  schedule:
    - cron: "0 6 * * *"
  workflow_dispatch:

permissions: read-all

concurrency: "e2e.go.workflow_dispatch.main.tagname-noldflags.slsa3"

env:
  GH_TOKEN: ${{ secrets.E2E_GO_TOKEN }}
  ISSUE_REPOSITORY: slsa-framework/slsa-github-generator
  # WARNING: update build job if CONFIG_FILE changes.
  CONFIG_FILE: .github/configs-go/config-noldflags.yml
  DEFAULT_VERSION: v30.0.0

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.create.outputs.tag }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - id: create
        run: ./.github/workflows/scripts/e2e-create-release.sh

  build:
    needs: [release]
    permissions:
      id-token: write # For signing.
      contents: write # For asset uploads.
      actions: read # For the entrypoint.
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@main
    with:
      go-version: "1.24"
      # We cannot use ${{ env.CONFIG_FILE }} because env variables are not available.
      config-file: .github/configs-go/config-noldflags.yml
      compile-builder: true
      upload-tag-name: "${{ needs.release.outputs.tag }}"
      upload-assets: true

  verify:
    runs-on: ubuntu-latest
    needs: [release, build]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ needs.build.outputs.go-binary-name }}
      - name: Download provenance
        env:
          PROVENANCE: ${{ needs.build.outputs.go-binary-name }}.intoto.jsonl
          TAG: ${{ needs.release.outputs.tag }}
        run: gh release download "$TAG" -p "$PROVENANCE"
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"
      - env:
          BINARY: ${{ needs.build.outputs.go-binary-name }}
          # NOTE: we download the artifact as `${{ needs.build.outputs.go-binary-name }}.intoto.jsonl`,
          # so we implictely verify that `${{ needs.build.outputs.go-binary-name }}.intoto.jsonl = ${{ needs.build.outputs.go-provenance-name }}`.
          PROVENANCE: ${{ needs.build.outputs.go-provenance-name }}
        run: ./.github/workflows/scripts/e2e.go.default.verify.sh

  if-succeeded:
    runs-on: ubuntu-latest
    needs: [release, build, verify]
    if: needs.build.result == 'success' && needs.verify.result == 'success'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: ./.github/workflows/scripts/e2e-report-success.sh

  if-failed:
    runs-on: ubuntu-latest
    needs: [release, build, verify]
    if: always() && (needs.build.result == 'failure' || needs.verify.result == 'failure')
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - run: ./.github/workflows/scripts/e2e-report-failure.sh
